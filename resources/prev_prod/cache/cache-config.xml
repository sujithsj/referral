<?xml version="1.0" encoding="UTF-8"?>
<infinispan
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:infinispan:config:5.1 http://www.infinispan.org/schemas/infinispan-config-5.1.xsd"
      xmlns="urn:infinispan:config:5.1">

   <!-- *************************** -->
   <!-- System-wide global settings -->
   <!-- *************************** -->

   <global>

       <!--
         If the transport is omitted, there is no way to create distributed or clustered caches.
         There is no added cost to defining a transport but not creating a cache that uses one, since the transport
         is created and initialized lazily.
      -->
      <transport clusterName="infinispan-cluster" distributedSyncTimeout="50000" nodeName="healthkart">
         <properties>
            <property name="configurationFile" value="jgroups-config.xml" />
         </properties>
     </transport>

   </global>

   <!-- *************************** -->
   <!-- Default "template" settings -->
   <!-- *************************** -->
   <!-- this is used as a "template" configuration for all caches in the system. -->
   <default>
      <!--
         isolation levels supported: READ_COMMITTED and REPEATABLE_READ
      -->
      <locking
            isolationLevel="READ_COMMITTED"
            lockAcquisitionTimeout="20000"
            writeSkewCheck="false"
            concurrencyLevel="500"
            useLockStriping="true"
            />

       <lazyDeserialization enabled="false"/>

      <!--
         Used to enable invocation batching and allow the use of Cache.startBatch()/endBatch() methods.
      -->
      <invocationBatching enabled="false"/>

      <!--
         This element specifies that the cache is clustered.
         modes supported: distribution (d), replication (r) or invalidation (i).
      -->
      <clustering mode="replication">

         <!--
            Defines whether to retrieve state on startup
         -->
         <stateRetrieval timeout="20000" fetchInMemoryState="false"/>

         <!--
            Network calls are synchronous.
         -->
         <sync replTimeout="20000"/>

      </clustering>

   </default>


</infinispan>
